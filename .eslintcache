[{"C:\\prJ\\some-calendar\\src\\index.tsx":"1","C:\\prJ\\some-calendar\\src\\App.tsx":"2","C:\\prJ\\some-calendar\\src\\store\\index.ts":"3","C:\\prJ\\some-calendar\\src\\components\\TodoList.tsx":"4","C:\\prJ\\some-calendar\\src\\hooks\\useTypedSelector.ts":"5","C:\\prJ\\some-calendar\\src\\hooks\\useActions.ts":"6","C:\\prJ\\some-calendar\\src\\store\\reducers\\index.ts":"7","C:\\prJ\\some-calendar\\src\\store\\action-creators\\index.ts":"8","C:\\prJ\\some-calendar\\src\\store\\reducers\\todoReducer.ts":"9","C:\\prJ\\some-calendar\\src\\store\\action-creators\\todo.ts":"10","C:\\prJ\\some-calendar\\src\\types\\todo.ts":"11","C:\\prJ\\some-calendar\\src\\store\\helper.ts":"12","C:\\prJ\\some-calendar\\src\\app.styled.js":"13","C:\\prJ\\some-calendar\\src\\components\\CellHeader\\CellHeader.tsx":"14","C:\\prJ\\some-calendar\\src\\store\\reducers\\calendarReducer.ts":"15","C:\\prJ\\some-calendar\\src\\types\\calendar.ts":"16","C:\\prJ\\some-calendar\\src\\store\\action-creators\\calendar.ts":"17","C:\\prJ\\some-calendar\\src\\components\\Task\\Task.tsx":"18","C:\\prJ\\some-calendar\\src\\components\\Task\\Task.styled.js":"19"},{"size":286,"mtime":1685950643732,"results":"20","hashOfConfig":"21"},{"size":728,"mtime":1685981057236,"results":"22","hashOfConfig":"21"},{"size":288,"mtime":1685952405867,"results":"23","hashOfConfig":"21"},{"size":1166,"mtime":1685950643730,"results":"24","hashOfConfig":"21"},{"size":192,"mtime":1685950643732,"results":"25","hashOfConfig":"21"},{"size":274,"mtime":1685950643731,"results":"26","hashOfConfig":"21"},{"size":303,"mtime":1685966336861,"results":"27","hashOfConfig":"21"},{"size":182,"mtime":1685967782131,"results":"28","hashOfConfig":"21"},{"size":796,"mtime":1685950643735,"results":"29","hashOfConfig":"21"},{"size":994,"mtime":1685967859133,"results":"30","hashOfConfig":"21"},{"size":843,"mtime":1685950643737,"results":"31","hashOfConfig":"21"},{"size":1372,"mtime":1685960971925,"results":"32","hashOfConfig":"21"},{"size":277,"mtime":1685965171082,"results":"33","hashOfConfig":"21"},{"size":1622,"mtime":1685980364011,"results":"34","hashOfConfig":"21"},{"size":571,"mtime":1685978252916,"results":"35","hashOfConfig":"21"},{"size":471,"mtime":1685978252923,"results":"36","hashOfConfig":"21"},{"size":1525,"mtime":1685978418201,"results":"37","hashOfConfig":"21"},{"size":431,"mtime":1685970808709,"results":"38","hashOfConfig":"21"},{"size":282,"mtime":1685971571616,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ructwh",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\prJ\\some-calendar\\src\\index.tsx",[],["87","88"],"C:\\prJ\\some-calendar\\src\\App.tsx",[],"C:\\prJ\\some-calendar\\src\\store\\index.ts",[],"C:\\prJ\\some-calendar\\src\\components\\TodoList.tsx",["89"],"import React, {useEffect} from 'react';\r\nimport {useTypedSelector} from \"../hooks/useTypedSelector\";\r\nimport {useActions} from \"../hooks/useActions\";\r\n\r\nconst TodoList: React.FC = () => {\r\n    const {page, error, loading, todos, limit} = useTypedSelector(state => state.todo)\r\n    const {fetchTodos, setTodoPage} = useActions()\r\n    const pages = [1, 2, 3, 4, 5]\r\n\r\n    useEffect(() => {\r\n        fetchTodos(page, limit)\r\n    }, [page])\r\n\r\n    if (loading) {\r\n        return <h1>Идет загрузка...</h1>\r\n    }\r\n    if (error) {\r\n        return <h1>{error}</h1>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {todos.map(todo =>\r\n                <div key={todo.id}>{todo.id} - {todo.title}</div>\r\n            )}\r\n            <div style={{display: \"flex\"}}>\r\n                {pages.map(p =>\r\n                    <div\r\n                        onClick={() => setTodoPage(p)}\r\n                        style={{border:p === page ? '2px solid green' : '1px solid gray', padding: 10}}\r\n                    >\r\n                        {p}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;\r\n","C:\\prJ\\some-calendar\\src\\hooks\\useTypedSelector.ts",[],"C:\\prJ\\some-calendar\\src\\hooks\\useActions.ts",[],"C:\\prJ\\some-calendar\\src\\store\\reducers\\index.ts",[],"C:\\prJ\\some-calendar\\src\\store\\action-creators\\index.ts",["90"],"import * as CalendarActionCreators from './calendar'\r\nimport * as TodoActionCreators from './todo'\r\n\r\nexport default {\r\n    ...TodoActionCreators,\r\n    ...CalendarActionCreators\r\n}\r\n","C:\\prJ\\some-calendar\\src\\store\\reducers\\todoReducer.ts",[],"C:\\prJ\\some-calendar\\src\\store\\action-creators\\todo.ts",[],"C:\\prJ\\some-calendar\\src\\types\\todo.ts",[],["91","92"],"C:\\prJ\\some-calendar\\src\\store\\helper.ts",["93","94"],"import axios from \"axios\";\r\n\r\nexport const fetchGeo = async ()  => {\r\n            const getPosition = () => {\r\n                if (navigator.geolocation) {\r\n                    return new Promise((res, rej) => {\r\n                        navigator.geolocation.getCurrentPosition(res, rej);\r\n                    });\r\n                }\r\n            }\r\n            const  position : GeolocationPosition = await getPosition() as GeolocationPosition;\r\n            const coords = position.coords;\r\n            const geocode = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${coords.latitude},${coords.longitude}&key=AIzaSyAL2zIiicmxGGnYQi27WYw1Ip6LbU73mNI&language=en`)\r\n            let output = {};\r\n            if (geocode.data.status) {\r\n                if (geocode.data.results.length > 0) {\r\n                    geocode.data.results.map((result: { address_components: any[]; }) => {\r\n                        if (result.address_components.length > 0) {\r\n                            result.address_components.map(address => {\r\n                                if (address.types[0]) {\r\n                                    output = address.long_name;\r\n                                    }\r\n                                })\r\n                            }\r\n                        })\r\n                }\r\n             }\r\n            return output;\r\n}\r\n",["95","96"],"C:\\prJ\\some-calendar\\src\\app.styled.js",[],["97","98"],"C:\\prJ\\some-calendar\\src\\components\\CellHeader\\CellHeader.tsx",["99","100","101"],"import React, {useEffect} from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport {calendarSetup} from \"../../store/action-creators/calendar\";\r\nimport {useActions} from \"../../hooks/useActions\";\r\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\r\nimport Task from \"../Task/Task\";\r\n\r\n\r\n\r\nconst CellHeader: React.FC = () => {\r\n    const {days, firstDay, month} = useTypedSelector(state => state.calendar)\r\n    const {calendarSetup} = useActions()\r\n    useEffect(() => {\r\n        calendarSetup()\r\n    },[] )\r\n    return (\r\n            <Container >\r\n                <Row sm={{ cols: 7  }}>\r\n                    <Col sm={1} >{'Mon'}</Col><Col sm={1} >{'Tue'}</Col><Col sm={1} >{'Wed'}</Col><Col sm={2} >{'Thu'}</Col><Col sm={2} >{'Fri'}</Col><Col sm={2} >{'Sat'}</Col><Col sm={2} >{'Sun'}</Col>\r\n                </Row>\r\n                    <Row sm={{ cols: 7  }}>\r\n                    {days.map((el,index) => {\r\n                        if (index === 0) {\r\n                            return <Col sm={{  offset: firstDay*2-2 }} key={el.day}>\r\n                                <Task day={el.day} tasks={ el.tasks}  ></Task>\r\n                            </Col>\r\n                        }\r\n                            return <Col  key={el.day}>\r\n                                     <Task day={el.day} tasks={ el.tasks}  ></Task>\r\n                                   </Col>\r\n                    }\r\n\r\n                    )}\r\n                </Row>\r\n            </Container>\r\n    );\r\n};\r\n\r\nexport default CellHeader;\r\n","C:\\prJ\\some-calendar\\src\\store\\reducers\\calendarReducer.ts",[],"C:\\prJ\\some-calendar\\src\\types\\calendar.ts",[],"C:\\prJ\\some-calendar\\src\\store\\action-creators\\calendar.ts",["102","103"],"import {CalendarAction,CalendarActionTypes} from \"../../types/calendar\";\r\nimport {Dispatch} from \"redux\";\r\nimport axios from \"axios\";\r\nimport {fetchGeo} from \"../helper\";\r\nimport moment from \"moment/moment\";\r\n\r\nexport const calendarSetup = () => {\r\n    return async (dispatch: Dispatch<CalendarAction>) => {\r\n        try {\r\n            const days= [];\r\n            console.log(moment().startOf('month').day())\r\n            for (let i = 1; i <= moment().daysInMonth(); i++) {\r\n                days.push({day:i, tasks: []});\r\n            }\r\n            dispatch({type: CalendarActionTypes.SETUP_CALENDAR, payload: {days,month:moment().month(),firstDay:moment().startOf('month').day(),error:null}});\r\n\r\n\r\n\r\n\r\n           /* const AvailableCountries  = await axios.get('https://date.nager.at/api/v3/AvailableCountries')\r\n\r\n            const country = await fetchGeo();\r\n            const currentCountry :\r\n                {\r\n                    \"countryCode\": \"string\",\r\n                    \"name\": \"string\"\r\n                } = {...AvailableCountries.data.find((item:{name:string}) => item.name === country)};\r\n            console.log(currentCountry)\r\n            if(currentCountry){\r\n                const calendarInfo  = await axios.get(`https://date.nager.at/api/v3/CountryInfo/${currentCountry.countryCode}`)\r\n                console.log(calendarInfo.data)\r\n                dispatch({type: CalendarActionTypes.SETUP_CALENDAR, payload: AvailableCountries.data})\r\n            }*/\r\n\r\n        } catch (e) {\r\n        }\r\n    }\r\n}\r\n","C:\\prJ\\some-calendar\\src\\components\\Task\\Task.tsx",[],"C:\\prJ\\some-calendar\\src\\components\\Task\\Task.styled.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":12,"column":8,"nodeType":"110","endLine":12,"endColumn":14,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":4,"column":1,"nodeType":"114","endLine":7,"endColumn":2},{"ruleId":"104","replacedBy":"115"},{"ruleId":"106","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":17,"column":87,"nodeType":"119","messageId":"120","endLine":17,"endColumn":89},{"ruleId":"117","severity":1,"message":"118","line":19,"column":67,"nodeType":"119","messageId":"120","endLine":19,"endColumn":69},{"ruleId":"104","replacedBy":"121"},{"ruleId":"106","replacedBy":"122"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"123","severity":1,"message":"124","line":5,"column":9,"nodeType":"125","messageId":"126","endLine":5,"endColumn":22},{"ruleId":"123","severity":1,"message":"127","line":13,"column":28,"nodeType":"125","messageId":"126","endLine":13,"endColumn":33},{"ruleId":"108","severity":1,"message":"128","line":17,"column":7,"nodeType":"110","endLine":17,"endColumn":9,"suggestions":"129"},{"ruleId":"123","severity":1,"message":"130","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":13},{"ruleId":"123","severity":1,"message":"131","line":4,"column":9,"nodeType":"125","messageId":"126","endLine":4,"endColumn":17},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchTodos' and 'limit'. Either include them or remove the dependency array.","ArrayExpression",["134"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["132"],["133"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["132"],["133"],"@typescript-eslint/no-unused-vars","'calendarSetup' is defined but never used.","Identifier","unusedVar","'month' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'calendarSetup'. Either include it or remove the dependency array.",["135"],"'axios' is defined but never used.","'fetchGeo' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [fetchTodos, limit, page]",{"range":"140","text":"141"},"Update the dependencies array to be: [calendarSetup]",{"range":"142","text":"143"},[429,435],"[fetchTodos, limit, page]",[614,616],"[calendarSetup]"]